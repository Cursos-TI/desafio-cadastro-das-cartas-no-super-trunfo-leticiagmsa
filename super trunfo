
   #include <stdio.h>
#include <string.h>

typedef struct {
    char codigo[4];
    char estado;
    int numeroCidade;
    char nomeEstado[20];
    char nomeCidade[20];
    int populacao;
    float area;
    float pib;
    int pontosTuristicos;
    float densidadePopulacional;
    float pibPerCapita;
} Carta;

// Arrays fixos de nomes para estados e cidades, indexados para evitar if/switch
const char *estados[8] = {
    "Andária", "Boreália", "Cantarina", "Dorávia",
    "Estrelândia", "Florânia", "Granaluz", "Horizônia"
};

const char *cidades[8][4] = {
    {"Solária", "Ventúria", "Lunária", "Bravona"},
    {"Invernia", "Nevaluz", "Ártica", "Gelária"},
    {"Melódia", "Harmonia", "Rítmica", "Coralina"},
    {"Montávia", "Pedrúnia", "Rochaluz", "Valedouro"},
    {"Luminara", "Brilúnia", "Noctúria", "Claravida"},
    {"Rosávia", "Jardoluz", "Primavela", "Botânia"},
    {"Verdelago", "Campoleiro", "Pastália", "Plantávia"},
    {"Solnascente", "Claravento", "Alvoraluz", "Céudouro"}
};

// Função para obter índice do estado (A-H)
int indiceEstado(char estado) {
    return estado - 'A';
}

void preencherCarta(Carta *carta) {
    int idxEstado = indiceEstado(carta->estado);
    int idxCidade = carta->numeroCidade - 1;

    strcpy(carta->nomeEstado, estados[idxEstado]);
    strcpy(carta->nomeCidade, cidades[idxEstado][idxCidade]);

    snprintf(carta->codigo, sizeof(carta->codigo), "%c%02d", carta->estado, carta->numeroCidade);

    // Cálculos
    carta->densidadePopulacional = carta->populacao / carta->area;
    carta->pibPerCapita = (carta->pib * 1e9) / carta->populacao; // PIB em bilhões, converte para reais antes
}

void exibirCarta(Carta carta, int numCarta) {
    printf("Carta %d:\n", numCarta);
    printf("Estado: %c\n", carta.estado);
    printf("Código: %s\n", carta.codigo);
    printf("Nome da Cidade: %s\n", carta.nomeCidade);
    printf("População: %d\n", carta.populacao);
    printf("Área: %.2f km²\n", carta.area);
    printf("PIB: %.2f bilhões de reais\n", carta.pib);
    printf("Número de Pontos Turísticos: %d\n", carta.pontosTuristicos);
    printf("Densidade Populacional: %.2f hab/km²\n", carta.densidadePopulacional);
    printf("PIB per Capita: %.2f reais\n\n", carta.pibPerCapita);
}

int main() {
    Carta cartas[2];

    printf("=== Cadastro de 2 Cidades - Super Trunfo: Países ===\n");

    // Entrada carta 1
    printf("\nCarta 1\n");
    printf("Informe o Estado (A-H): ");
    scanf(" %c", &cartas[0].estado);
    printf("Informe o número da cidade (1-4): ");
    scanf("%d", &cartas[0].numeroCidade);
    printf("População: ");
    scanf("%d", &cartas[0].populacao);
    printf("Área (km²): ");
    scanf("%f", &cartas[0].area);
    printf("PIB (bilhões de reais): ");
    scanf("%f", &cartas[0].pib);
    printf("Número de pontos turísticos: ");
    scanf("%d", &cartas[0].pontosTuristicos);

    preencherCarta(&cartas[0]);

    // Entrada carta 2
    printf("\nCarta 2\n");
    printf("Informe o Estado (A-H): ");
    scanf(" %c", &cartas[1].estado);
    printf("Informe o número da cidade (1-4): ");
    scanf("%d", &cartas[1].numeroCidade);
    printf("População: ");
    scanf("%d", &cartas[1].populacao);
    printf("Área (km²): ");
    scanf("%f", &cartas[1].area);
    printf("PIB (bilhões de reais): ");
    scanf("%f", &cartas[1].pib);
    printf("Número de pontos turísticos: ");
    scanf("%d", &cartas[1].pontosTuristicos);

    preencherCarta(&cartas[1]);

    // Exibir resultados
    printf("\n=== Resultados ===\n");
    exibirCarta(cartas[0], 1);
    exibirCarta(cartas[1], 2);

    return 0;
}

