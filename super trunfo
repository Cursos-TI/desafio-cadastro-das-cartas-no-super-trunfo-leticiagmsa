
   #include <stdio.h>
#include <string.h>

struct Carta {
    char estado[3];
    char codigo[4];
    char nomeCidade[50];
    unsigned long int populacao;
    float area;
    float pib;
    int pontosTuristicos;
    float densidadePopulacional;
    float pibPerCapita;
    float superPoder;
};

void calcularIndicadores(struct Carta *carta) {
    carta->densidadePopulacional = carta->populacao / carta->area;
    carta->pibPerCapita = carta->pib / carta->populacao;
    carta->superPoder = carta->populacao + carta->area + carta->pib + carta->pontosTuristicos + carta->pibPerCapita + (1.0 / carta->densidadePopulacional);
}

void imprimirCarta(struct Carta c, int numero) {
    printf("\nCarta %d:\n", numero);
    printf("Estado: %s\n", c.estado);
    printf("Código: %s\n", c.codigo);
    printf("Nome da Cidade: %s\n", c.nomeCidade);
    printf("População: %lu\n", c.populacao);
    printf("Área: %.2f km²\n", c.area);
    printf("PIB: %.2f bilhões de reais\n", c.pib);
    printf("Número de Pontos Turísticos: %d\n", c.pontosTuristicos);
    printf("Densidade Populacional: %.2f hab/km²\n", c.densidadePopulacional);
    printf("PIB per Capita: %.2f reais\n", c.pibPerCapita);
    printf("Super Poder: %.2f\n", c.superPoder);
}

float obterValorAtributo(struct Carta c, int opcao) {
    switch (opcao) {
        case 1: return (float)c.populacao;
        case 2: return c.area;
        case 3: return c.pib;
        case 4: return (float)c.pontosTuristicos;
        case 5: return c.densidadePopulacional;
        case 6: return c.pibPerCapita;
        default: return 0;
    }
}

const char* nomeAtributo(int opcao) {
    switch (opcao) {
        case 1: return "População";
        case 2: return "Área";
        case 3: return "PIB";
        case 4: return "Pontos Turísticos";
        case 5: return "Densidade Populacional";
        case 6: return "PIB per Capita";
        default: return "Desconhecido";
    }
}

int main() {
    struct Carta carta1, carta2;

    // Cadastro das cartas
    printf("\nCadastro da Carta 1:\n");
    printf("Estado: "); scanf("%s", carta1.estado);
    printf("Código: "); scanf("%s", carta1.codigo);
    printf("Nome da Cidade: "); scanf(" %[^"]s", carta1.nomeCidade);
    printf("População: "); scanf("%lu", &carta1.populacao);
    printf("Área (km²): "); scanf("%f", &carta1.area);
    printf("PIB (em bilhões): "); scanf("%f", &carta1.pib);
    printf("Número de Pontos Turísticos: "); scanf("%d", &carta1.pontosTuristicos);
    calcularIndicadores(&carta1);

    printf("\nCadastro da Carta 2:\n");
    printf("Estado: "); scanf("%s", carta2.estado);
    printf("Código: "); scanf("%s", carta2.codigo);
    printf("Nome da Cidade: "); scanf(" %[^"]s", carta2.nomeCidade);
    printf("População: "); scanf("%lu", &carta2.populacao);
    printf("Área (km²): "); scanf("%f", &carta2.area);
    printf("PIB (em bilhões): "); scanf("%f", &carta2.pib);
    printf("Número de Pontos Turísticos: "); scanf("%d", &carta2.pontosTuristicos);
    calcularIndicadores(&carta2);

    // Impressão das cartas
    imprimirCarta(carta1, 1);
    imprimirCarta(carta2, 2);

    // Menu para seleção dos dois atributos
    int atributo1 = 0, atributo2 = 0;

    printf("\nEscolha o primeiro atributo para comparação:\n");
    printf("1 - População\n2 - Área\n3 - PIB\n4 - Pontos Turísticos\n5 - Densidade Populacional\n6 - PIB per Capita\n");
    scanf("%d", &atributo1);

    printf("\nEscolha o segundo atributo para comparação (diferente do primeiro):\n");
    switch (atributo1) {
        case 1: printf("2 - Área\n3 - PIB\n4 - Pontos Turísticos\n5 - Densidade Populacional\n6 - PIB per Capita\n"); break;
        case 2: printf("1 - População\n3 - PIB\n4 - Pontos Turísticos\n5 - Densidade Populacional\n6 - PIB per Capita\n"); break;
        case 3: printf("1 - População\n2 - Área\n4 - Pontos Turísticos\n5 - Densidade Populacional\n6 - PIB per Capita\n"); break;
        case 4: printf("1 - População\n2 - Área\n3 - PIB\n5 - Densidade Populacional\n6 - PIB per Capita\n"); break;
        case 5: printf("1 - População\n2 - Área\n3 - PIB\n4 - Pontos Turísticos\n6 - PIB per Capita\n"); break;
        case 6: printf("1 - População\n2 - Área\n3 - PIB\n4 - Pontos Turísticos\n5 - Densidade Populacional\n"); break;
        default: printf("Opção inválida.\n"); return 1;
    }
    scanf("%d", &atributo2);

    float valor1A = obterValorAtributo(carta1, atributo1);
    float valor2A = obterValorAtributo(carta2, atributo1);
    float valor1B = obterValorAtributo(carta1, atributo2);
    float valor2B = obterValorAtributo(carta2, atributo2);

    int v1 = (atributo1 == 5) ? (valor1A < valor2A) : (valor1A > valor2A);
    int v2 = (atributo2 == 5) ? (valor1B < valor2B) : (valor1B > valor2B);

    float soma1 = valor1A + valor1B;
    float soma2 = valor2A + valor2B;

    printf("\nComparação de Cartas (Atributos: %s e %s):\n", nomeAtributo(atributo1), nomeAtributo(atributo2));
    printf("%s: %.2f x %.2f => %s\n", nomeAtributo(atributo1), valor1A, valor2A, v1 ? "Carta 1 venceu" : "Carta 2 venceu");
    printf("%s: %.2f x %.2f => %s\n", nomeAtributo(atributo2), valor1B, valor2B, v2 ? "Carta 1 venceu" : "Carta 2 venceu");

    printf("\nSoma dos atributos:\nCarta 1: %.2f\nCarta 2: %.2f\n", soma1, soma2);
    if (soma1 > soma2)
        printf("\nResultado Final: Carta 1 venceu!\n");
    else if (soma2 > soma1)
        printf("\nResultado Final: Carta 2 venceu!\n");
    else
        printf("\nResultado Final: Empate!\n");

    return 0;
}
