#include <stdio.h>
#include <stdlib.h>

#define MAX_CARTAS 32

typedef struct {
    char codigo[4]; // Ex: A01
    char estado;    // Letra do estado
    int numeroCidade; 
    char nomeEstado[20];
    char nomeCidade[20];
    int populacao;
    float area;
    float pib;
    int pontosTuristicos;
} Carta;

// Função para obter nome do estado pelo código
void getNomeEstado(char estado, char *nomeEstado) {
    switch (estado) {
        case 'A': case 'a': strcpy(nomeEstado, "Andária"); break;
        case 'B': case 'b': strcpy(nomeEstado, "Boreália"); break;
        case 'C': case 'c': strcpy(nomeEstado, "Cantarina"); break;
        case 'D': case 'd': strcpy(nomeEstado, "Dorávia"); break;
        case 'E': case 'e': strcpy(nomeEstado, "Estrelândia"); break;
        case 'F': case 'f': strcpy(nomeEstado, "Florânia"); break;
        case 'G': case 'g': strcpy(nomeEstado, "Granaluz"); break;
        case 'H': case 'h': strcpy(nomeEstado, "Horizônia"); break;
        default: strcpy(nomeEstado, "Desconhecido"); break;
    }
}

// Função para obter nome da cidade pelo estado e número
void getNomeCidade(char estado, int numCidade, char *nomeCidade) {
    switch (estado) {
        case 'A': case 'a':
            switch (numCidade) {
                case 1: strcpy(nomeCidade, "Solária"); break;
                case 2: strcpy(nomeCidade, "Ventúria"); break;
                case 3: strcpy(nomeCidade, "Lunária"); break;
                case 4: strcpy(nomeCidade, "Bravona"); break;
                default: strcpy(nomeCidade, "Desconhecida"); break;
            }
            break;
        case 'B': case 'b':
            switch (numCidade) {
                case 1: strcpy(nomeCidade, "Invernia"); break;
                case 2: strcpy(nomeCidade, "Nevaluz"); break;
                case 3: strcpy(nomeCidade, "Ártica"); break;
                case 4: strcpy(nomeCidade, "Gelária"); break;
                default: strcpy(nomeCidade, "Desconhecida"); break;
            }
            break;
        case 'C': case 'c':
            switch (numCidade) {
                case 1: strcpy(nomeCidade, "Melódia"); break;
                case 2: strcpy(nomeCidade, "Harmonia"); break;
                case 3: strcpy(nomeCidade, "Rítmica"); break;
                case 4: strcpy(nomeCidade, "Coralina"); break;
                default: strcpy(nomeCidade, "Desconhecida"); break;
            }
            break;
        case 'D': case 'd':
            switch (numCidade) {
                case 1: strcpy(nomeCidade, "Montávia"); break;
                case 2: strcpy(nomeCidade, "Pedrúnia"); break;
                case 3: strcpy(nomeCidade, "Rochaluz"); break;
                case 4: strcpy(nomeCidade, "Valedouro"); break;
                default: strcpy(nomeCidade, "Desconhecida"); break;
            }
            break;
        case 'E': case 'e':
            switch (numCidade) {
                case 1: strcpy(nomeCidade, "Luminara"); break;
                case 2: strcpy(nomeCidade, "Brilúnia"); break;
                case 3: strcpy(nomeCidade, "Noctúria"); break;
                case 4: strcpy(nomeCidade, "Claravida"); break;
                default: strcpy(nomeCidade, "Desconhecida"); break;
            }
            break;
        case 'F': case 'f':
            switch (numCidade) {
                case 1: strcpy(nomeCidade, "Rosávia"); break;
                case 2: strcpy(nomeCidade, "Jardoluz"); break;
                case 3: strcpy(nomeCidade, "Primavela"); break;
                case 4: strcpy(nomeCidade, "Botânia"); break;
                default: strcpy(nomeCidade, "Desconhecida"); break;
            }
            break;
        case 'G': case 'g':
            switch (numCidade) {
                case 1: strcpy(nomeCidade, "Verdelago"); break;
                case 2: strcpy(nomeCidade, "Campoleiro"); break;
                case 3: strcpy(nomeCidade, "Pastália"); break;
                case 4: strcpy(nomeCidade, "Plantávia"); break;
                default: strcpy(nomeCidade, "Desconhecida"); break;
            }
            break;
        case 'H': case 'h':
            switch (numCidade) {
                case 1: strcpy(nomeCidade, "Solnascente"); break;
                case 2: strcpy(nomeCidade, "Claravento"); break;
                case 3: strcpy(nomeCidade, "Alvoraluz"); break;
                case 4: strcpy(nomeCidade, "Céudouro"); break;
                default: strcpy(nomeCidade, "Desconhecida"); break;
            }
            break;
        default:
            strcpy(nomeCidade, "Desconhecida");
            break;
    }
}

void exibirCarta(Carta c) {
    printf("Código da Carta: %s\n", c.codigo);
    printf("Estado: %s (%c)\n", c.nomeEstado, c.estado);
    printf("Cidade: %s (%d)\n", c.nomeCidade, c.numeroCidade);
    printf("População: %d habitantes\n", c.populacao);
    printf("Área: %.2f km²\n", c.area);
    printf("PIB: R$ %.2f bilhões\n", c.pib);
    printf("Pontos Turísticos: %d\n", c.pontosTuristicos);
    printf("---------------------------------\n");
}

int main() {
    Carta cartas[MAX_CARTAS];
    int total = 0;
    char continuar;

    printf("=== Cadastro de Cidades - Super Trunfo: Países ===\n");

    do {
        if (total >= MAX_CARTAS) {
            printf("Limite máximo de cartas atingido!\n");
            break;
        }

        printf("\n--- Carta %d ---\n", total + 1);
        printf("Informe o Estado (A-H): ");
        scanf(" %c", &cartas[total].estado);

        printf("Informe o número da cidade (1-4): ");
        scanf("%d", &cartas[total].numeroCidade);

        // Gerar código da carta
        snprintf(cartas[total].codigo, sizeof(cartas[total].codigo), "%c%02d", cartas[total].estado, cartas[total].numeroCidade);

        // Obter nomes
        getNomeEstado(cartas[total].estado, cartas[total].nomeEstado);
        getNomeCidade(cartas[total].estado, cartas[total].numeroCidade, cartas[total].nomeCidade);

        printf("População: ");
        scanf("%d", &cartas[total].populacao);

        printf("Área (em km²): ");
        scanf("%f", &cartas[total].area);

        printf("PIB (em bilhões de R$): ");
        scanf("%f", &cartas[total].pib);

        printf("Número de pontos turísticos: ");
        scanf("%d", &cartas[total].pontosTuristicos);

        total++;

        printf("Deseja cadastrar outra carta? (S/N): ");
        scanf(" %c", &continuar);

    } while (continuar == 'S' || continuar == 's');

    printf("\n=== Cartas Cadastradas ===\n");
    for (int i = 0; i < total; i++) {
        exibirCarta(cartas[i]);
    }

    return 0;
}

